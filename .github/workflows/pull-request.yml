name: Hog

on:
  workflow_call:
    inputs:
      BUILD_PROJECTS:
        required: false
        type: string
      SIM_PROJECTS:
        required: false
        type: string
    secrets:
      SUBMODULE_CONTENT_PULL_KEY:
        required: true
jobs:
  merge:
    env:
      PR_NUMBER: ${{ github.event.number }}
      HOG_TOKEN: ${{ secrets.HOG_TOKEN }}
      GITHUB_API_URL: ${{github.api_url }}
      REPO: ${{ github.repository }}
    runs-on: ubuntu-latest
    container: gitlab-registry.cern.ch/hog/hog-docker:tclsh
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
      - name: merge-and-tag
        run: |
          echo $GITHUB_API_URL
          echo $REPO
          echo $PR_NUMBER
          PULL_PARAMETERS=`curl -H "Accept: application/vnd.github.v3+json" $GITHUB_API_URL/repos/$REPO/pulls/$PR_NUMBER --header  "Authorization: token ${HOG_GITHUB_TOKEN}"`

  build:
    runs-on: self-hosted
    env:
      HOG_PATH: /opt/Xilinx/Vivado/2020.2/bin
    strategy:
      matrix:
        PROJECT_NAME: ${{fromJson(inputs.BUILD_PROJECTS)}}
    needs: merge
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
      - name: Hog
        run: |
              git submodule init
              git submodule update --remote
              export PATH=${HOG_PATH}:$PATH
              git fetch -p
              git --version
              cd Hog/ && git fetch -p
              cd ..
              ./Hog/LaunchWorkflow.sh ${{ matrix.PROJECT_NAME }}
      - name: Archive production artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Create artifacts
          path: |
            Projects