name: Hog-main

on:
  workflow_call:
    secrets:
      SUBMODULE_CONTENT_PULL_KEY:
        required: true
      HOG_PUSH_TOKEN:
        required: true
      HOG_EMAIL:
        required: true
      HOG_USER:
        required: true
        
env:
  HOG_PUSH_TOKEN: ${{ secrets.HOG_PUSH_TOKEN }}
  GITHUB_API_URL: ${{ github.api_url }}
  REPO: ${{ github.repository }}
  HOG_USER: ${{ secrets.HOG_USER }}
  HOG_EMAIL: ${{ secrets.HOG_EMAIL }}
  SOURCE_BRANCH: ${{ github.head_ref }}

jobs:
  tag_official_version:
    runs-on: ubuntu-latest
    container: gitlab-registry.cern.ch/hog/hog-docker:tclsh
    steps:
      - uses: actions/checkout@v2
        with: 
          fetch-depth: 0
      - uses: webfactory/ssh-agent@v0.5.4
        with:
            ssh-private-key: ${{ secrets.SUBMODULE_CONTENT_PULL_KEY }}
      - name: tag_official_version
        run: |
          git config --global user.email "$HOG_EMAIL"
          git config --global user.name "$HOG_USER"
          git fetch 
          git checkout $SOURCE_BRANCH
          git pull
          commit_message=$(git show --pretty=format:"%B" --no-patch)
          if [[ "$commit_message" == "Merge pull request"*]]; then
            echo "Removing merge commit..."
            previous_commit=$(git rev-parse HEAD^1)  
            git reset --hard $previous_commit
            git push --force
            exit 0 
          fi;
          git fetch origin refs/notes/*:refs/notes/*
          note=(`git notes show`)
          new_tag=${note[2]}
          if [ "$(git tag --list ${new_tag}*)" != "" ]; then
            latest_tag=(`git tag -l ${new_tag}* --sort=-v:refname --merged`);
            if [[ $latest_tag =~ ".*-(.*)" ]]; then
              nr="${BASH_REMATCH[1]}";
              new_tag="$new_tag-$(($nr+1))";
            else
              new_tag="$new_tag-0";
            fi;
          fi;
          git tag $new_tag -m "Official_version_${new_tag}" 
          git push --tags